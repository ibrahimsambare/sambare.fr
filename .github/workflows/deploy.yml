name: Deploy frontend to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps (frontend)
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build (frontend)
        working-directory: frontend
        run: npm run build

      - name: Detect build directory
        id: detect
        run: |
          if [ -d "frontend/dist" ]; then
            echo "outdir=frontend/dist" >> "$GITHUB_OUTPUT"
          elif [ -d "frontend/build" ]; then
            echo "outdir=frontend/build" >> "$GITHUB_OUTPUT"
          else
            echo "❌ Build folder not found (expected frontend/dist or frontend/build)"; exit 1
          fi
          echo "Using: $(cat "$GITHUB_OUTPUT")"

      - name: Add CNAME and SPA 404
        run: |
          OUT="${{ steps.detect.outputs.outdir }}"
          echo "www.sambare.fr" > "$OUT/CNAME"
          if [ -f "$OUT/index.html" ]; then
            cp "$OUT/index.html" "$OUT/404.html"
          fi

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect.outputs.outdir }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
